# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "*" ]
    paths:
      - "${{ env.SRC_PATH }}/**"
      - "${{ env.TESTS_PATH }}/**"
      - "${{ env.NEW_SRC_PATH }}/**"
      - "${{ env.NEW_TESTS_PATH }}/**"
  pull_request:
    branches: [ "*" ]
    paths:
      - "${{ env.SRC_PATH }}/**"
      - "${{ env.TESTS_PATH }}/**"
      - "${{ env.NEW_SRC_PATH }}/**"
      - "${{ env.NEW_TESTS_PATH }}/**"

permissions:
  contents: read

env:
  SRC_PATH: validation/validate_all_configs.py validation/validate_config.py  # Updated to specific validation files
  TESTS_PATH: tests/test_validate_all_configs.py tests/test_validate_config.py  # Updated to specific test files
  # NEW_SRC_PATH: new_src  # Commented out
  # NEW_TESTS_PATH: new_tests  # Commented out

jobs:
  determine-tests:
    runs-on: ubuntu-latest
    outputs:
      run-src-tests: ${{ steps.set-output.outputs.run-src-tests }}
      # run-new-src-tests: ${{ steps.set-output.outputs.run-new-src-tests }}
    steps:
    - uses: actions/checkout@v4
    - name: Determine tests to run
      id: set-output
      run: |
        if git diff --name-only $(git merge-base HEAD origin/main) | grep -q '^${{ env.SRC_PATH }}/'; then
          echo "::set-output name=run-src-tests::true"
        else
          echo "::set-output name=run-src-tests::false"
        fi
        # if git diff --name-only $(git merge-base HEAD origin/main) | grep -q '^${{ env.NEW_SRC_PATH }}/'; then
        #   echo "::set-output name=run-new-src-tests::true"
        # else
        #   echo "::set-output name=run-new-src-tests::false"
        # fi

  build:
    runs-on: ubuntu-latest
    needs: determine-tests
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        if [ "${{ needs.determine-tests.outputs.run-src-tests }}" == "true" ]; then
          pytest ${{ env.TESTS_PATH }}/
        fi
        # if [ "${{ needs.determine-tests.outputs.run-new-src-tests }}" == "true" ]; then
        #   pytest ${{ env.NEW_TESTS_PATH }}/
        # fi
